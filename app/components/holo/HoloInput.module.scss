/* HoloInput Component Styles - Full Holographic Input Effects
 * Part of Phase 3: Holographic Material System
 * Implements: Dynamic light borders, data flow visualization, smart status indication
 * 
 * {{CHENGQI:
 * Action: Added
 * Timestamp: 2025-06-10 18:51:15 +08:00
 * Reason: P3-LD-016任务执行 - 创建HoloInput样式系统，实现全息输入体验
 * Principle_Applied: KISS(模块化样式结构), DRY(复用premium-theme变量), Performance(GPU优化)
 * Optimization: 3层背景系统 + 数据流可视化 + 智能状态切换 + 性能监控
 * Architectural_Note (AR): 完全基于已有全息材质系统，保持与HoloCard等组件的一致性
 * Documentation_Note (DW): 每个效果模块都有详细说明，便于理解和维护
 * }}
 */

@import "../../styles/premium-mixins.scss";

/* ===========================================
 * 基础容器样式 - 全息输入组件
 * =========================================== */
.holoInput {
  position: relative;
  display: flex;
  flex-direction: column;
  gap: var(--quantum-time-xs);
  font-family: var(--premium-font-text);
  
  // GPU硬件加速
  @include quantum-gpu-accelerated;
  
  // 组件变量
  --holo-border-color: var(--premium-border-starlight);
  --holo-glow-color: var(--premium-glow-primary);
  --holo-bg-primary: var(--premium-bg-void);
  --holo-bg-secondary: var(--premium-bg-space);
  --holo-text-color: var(--premium-text-primary);
  --holo-label-color: var(--premium-text-secondary);
  --holo-transition: var(--quantum-time-md) var(--quantum-ease-elastic-out);
  
  // 自定义光感颜色支持
  &[style*="--custom-glow-color"] {
    --holo-glow-color: var(--custom-glow-color);
    --holo-border-color: var(--custom-glow-color);
  }
}

/* ===========================================
 * 标签样式 - Label
 * =========================================== */
.label {
  font-size: var(--premium-font-size-sm);
  font-weight: 500;
  color: var(--holo-label-color);
  margin-bottom: var(--quantum-time-xs);
  transition: color var(--holo-transition);
  
  // 聚焦时标签发光
  .focused & {
    color: var(--holo-glow-color);
    text-shadow: 0 0 8px var(--holo-glow-color);
  }
}

/* ===========================================
 * 主输入容器 - Input Container
 * =========================================== */
.inputContainer {
  position: relative;
  display: flex;
  align-items: center;
  overflow: hidden;
  border-radius: var(--premium-border-radius-lg);
  
  // 基础样式
  background: var(--holo-bg-primary);
  border: 1px solid var(--holo-border-color);
  
  // 基础过渡
  transition: all var(--holo-transition);
  
  // 聚焦状态
  .focused & {
    @include focus-glow(md);
    transform: translateY(-1px);
    background: var(--premium-bg-nebula);
  }
  
  // 激活状态（输入中）
  .typing & {
    @include energy-border(flow);
    background: var(--premium-bg-stellar);
  }
  
  // 错误状态
  .error & {
    @include status-border(error);
    background: rgba(255, 99, 71, 0.1);
  }
}

/* ===========================================
 * 背景层系统 - 3层深度效果
 * =========================================== */
.backgroundLayers {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  border-radius: inherit;
  overflow: hidden;
  
  .layer1,
  .layer2,
  .layer3 {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    opacity: 0;
    transition: opacity var(--holo-transition);
  }
  
  .layer1 {
    background: linear-gradient(45deg, 
      var(--premium-bg-cosmos) 0%,
      var(--premium-bg-void) 50%,
      var(--premium-bg-space) 100%);
  }
  
  .layer2 {
    background: radial-gradient(circle at 30% 70%, 
      rgba(100, 150, 255, 0.1) 0%,
      transparent 50%);
  }
  
  .layer3 {
    background: conic-gradient(from 0deg,
      transparent 0deg,
      var(--holo-glow-color) 90deg,
      transparent 180deg,
      var(--holo-glow-color) 270deg,
      transparent 360deg);
    opacity: 0.1;
    animation: holographic-rotation 20s linear infinite;
  }
  
  // 聚焦时激活背景层
  .focused & {
    .layer1 { opacity: 0.6; }
    .layer2 { opacity: 0.4; }
    .layer3 { opacity: 0.2; }
  }
  
  // 输入时增强效果
  .typing & {
    .layer1 { opacity: 0.8; }
    .layer2 { opacity: 0.6; }
    .layer3 { opacity: 0.3; }
  }
}

/* ===========================================
 * 光感边框系统 - Dynamic Glow Border
 * =========================================== */
.glowBorder {
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  border-radius: inherit;
  padding: 2px;
  background: linear-gradient(45deg, 
    var(--holo-border-color),
    transparent,
    var(--holo-border-color));
  background-size: 200% 200%;
  animation: starlight-shimmer 3s ease-in-out infinite;
  opacity: 0;
  pointer-events: none;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: inherit;
    background: var(--holo-bg-primary);
  }
  
  // 聚焦时显示光感边框
  .focused & {
    opacity: 0.6;
  }
  
  // 输入时增强光感
  .typing & {
    opacity: 0.9;
    animation: energy-flow 2s ease-in-out infinite;
  }
}

/* ===========================================
 * 数据流可视化系统 - Data Flow Effects
 * =========================================== */
.dataFlowContainer {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  overflow: hidden;
  border-radius: inherit;
  
  .dataFlow1,
  .dataFlow2,
  .dataFlow3 {
    position: absolute;
    height: 2px;
    background: linear-gradient(90deg,
      transparent,
      var(--holo-glow-color),
      transparent);
    opacity: 0;
    transform: translateX(-100%);
    border-radius: 1px;
  }
  
  .dataFlow1 {
    top: 25%;
    width: 60%;
    left: 0;
  }
  
  .dataFlow2 {
    top: 50%;
    width: 40%;
    right: 0;
    transform: translateX(100%);
  }
  
  .dataFlow3 {
    top: 75%;
    width: 80%;
    left: 10%;
  }
  
  // 输入时触发数据流动画
  .typing & {
    .dataFlow1 {
      opacity: 0.8;
      animation: data-flow-right 1.5s ease-out infinite;
    }
    
    .dataFlow2 {
      opacity: 0.6;
      animation: data-flow-left 2s ease-out infinite 0.5s;
    }
    
    .dataFlow3 {
      opacity: 0.4;
      animation: data-flow-right 2.5s ease-out infinite 1s;
    }
  }
}

/* ===========================================
 * 粒子效果系统 - Particle System
 * =========================================== */
.particleContainer {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  overflow: hidden;
  border-radius: inherit;
  
  .particle1,
  .particle2,
  .particle3,
  .particle4 {
    position: absolute;
    width: 3px;
    height: 3px;
    background: var(--holo-glow-color);
    border-radius: 50%;
    opacity: 0;
    box-shadow: 0 0 6px var(--holo-glow-color);
  }
  
  .particle1 {
    top: 20%;
    left: 15%;
    animation: particle-float-1 4s ease-in-out infinite;
  }
  
  .particle2 {
    top: 60%;
    right: 20%;
    animation: particle-float-2 5s ease-in-out infinite 1s;
  }
  
  .particle3 {
    bottom: 30%;
    left: 60%;
    animation: particle-float-3 6s ease-in-out infinite 2s;
  }
  
  .particle4 {
    top: 40%;
    right: 40%;
    animation: particle-float-4 4.5s ease-in-out infinite 3s;
  }
  
  // 聚焦时激活粒子
  .focused & {
    .particle1,
    .particle2,
    .particle3,
    .particle4 {
      opacity: 0.6;
    }
  }
  
  // 输入时增强粒子效果
  .typing & {
    .particle1,
    .particle2,
    .particle3,
    .particle4 {
      opacity: 1;
      animation-duration: 2s;
    }
  }
}

/* ===========================================
 * 实际输入框样式 - Input Element
 * =========================================== */
.input {
  position: relative;
  z-index: 10;
  width: 100%;
  background: transparent;
  border: none;
  outline: none;
  color: var(--holo-text-color);
  font-size: var(--premium-font-size-md);
  font-family: inherit;
  line-height: 1.5;
  
  // 内边距根据尺寸调整
  padding: var(--quantum-time-sm) var(--quantum-time-md);
  
  &::placeholder {
    color: var(--premium-text-placeholder);
    transition: color var(--holo-transition);
  }
  
  // 聚焦时占位符效果
  &:focus::placeholder {
    color: transparent;
  }
  
  // 禁用状态
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
  
  // 文本选择样式
  &::selection {
    background: var(--holo-glow-color);
    color: var(--premium-bg-cosmos);
  }
}

/* ===========================================
 * 状态指示器 - Status Indicator
 * =========================================== */
.statusIndicator {
  position: absolute;
  right: var(--quantum-time-sm);
  top: 50%;
  transform: translateY(-50%);
  z-index: 15;
  
  .statusDot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: var(--premium-text-secondary);
    transition: all var(--holo-transition);
    opacity: 0.5;
  }
  
  // 不同状态的指示器
  .status-idle & .statusDot {
    background: var(--premium-text-secondary);
    opacity: 0.3;
  }
  
  .status-focus & .statusDot {
    background: var(--holo-glow-color);
    opacity: 0.8;
    box-shadow: 0 0 8px var(--holo-glow-color);
  }
  
  .status-active & .statusDot {
    background: var(--premium-accent);
    opacity: 1;
    animation: glow-breathing 2s ease-in-out infinite;
  }
  
  .status-complete & .statusDot {
    background: var(--premium-success);
    opacity: 1;
  }
  
  .status-error & .statusDot {
    background: var(--premium-error);
    opacity: 1;
    animation: pulse 1s ease-in-out infinite;
  }
}

/* ===========================================
 * 底部信息区域 - Info Container
 * =========================================== */
.infoContainer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: var(--quantum-time-xs);
  gap: var(--quantum-time-sm);
}

.statusText {
  font-size: var(--premium-font-size-xs);
  color: var(--premium-text-secondary);
  flex: 1;
  
  // 错误状态文本
  .error & {
    color: var(--premium-error);
  }
}

.charCount {
  font-size: var(--premium-font-size-xs);
  color: var(--premium-text-tertiary);
  white-space: nowrap;
  
  &.overLimit {
    color: var(--premium-error);
    font-weight: 600;
  }
}

/* ===========================================
 * 尺寸变体 - Size Variants
 * =========================================== */
.size-sm {
  .input {
    padding: calc(var(--quantum-time-xs) * 0.8) var(--quantum-time-sm);
    font-size: var(--premium-font-size-sm);
  }
  
  .label {
    font-size: var(--premium-font-size-xs);
  }
}

.size-md {
  // 默认尺寸，已在基础样式中定义
}

.size-lg {
  .input {
    padding: var(--quantum-time-md) var(--quantum-time-lg);
    font-size: var(--premium-font-size-lg);
  }
  
  .label {
    font-size: var(--premium-font-size-md);
  }
  
  .statusIndicator .statusDot {
    width: 10px;
    height: 10px;
  }
}

.size-xl {
  .input {
    padding: var(--quantum-time-lg) calc(var(--quantum-time-lg) * 1.2);
    font-size: var(--premium-font-size-xl);
  }
  
  .label {
    font-size: var(--premium-font-size-lg);
  }
  
  .statusIndicator .statusDot {
    width: 12px;
    height: 12px;
  }
}

/* ===========================================
 * 全息效果变体 - Holographic Effect Types
 * =========================================== */
.holo-glass {
  .inputContainer {
    backdrop-filter: blur(20px) saturate(1.8);
    background: rgba(255, 255, 255, 0.05);
  }
}

.holo-crystal {
  .inputContainer {
    background: linear-gradient(135deg,
      rgba(255, 255, 255, 0.1),
      rgba(255, 255, 255, 0.05));
    border: 1px solid rgba(255, 255, 255, 0.2);
  }
}

.holo-plasma {
  .inputContainer {
    background: radial-gradient(circle at 50% 50%,
      rgba(100, 150, 255, 0.1),
      rgba(150, 100, 255, 0.05));
  }
}

.holo-quantum {
  // 默认量子效果，已在基础样式中定义
}

.holo-dimension {
  .inputContainer {
    background: linear-gradient(45deg,
      var(--premium-bg-void),
      var(--premium-bg-cosmos),
      var(--premium-bg-space));
    background-size: 200% 200%;
    animation: holographic-dimension 15s ease-in-out infinite;
  }
}

/* ===========================================
 * 强度变体 - Intensity Levels
 * =========================================== */
.intensity-subtle {
  --holo-glow-opacity: 0.3;
  
  .glowBorder {
    opacity: var(--holo-glow-opacity);
  }
  
  .particleContainer {
    opacity: 0.5;
  }
}

.intensity-normal {
  --holo-glow-opacity: 0.6;
  // 默认强度，已在基础样式中定义
}

.intensity-intense {
  --holo-glow-opacity: 0.9;
  
  .backgroundLayers .layer3 {
    opacity: 0.4;
  }
  
  .particleContainer {
    opacity: 1.2;
  }
}

.intensity-extreme {
  --holo-glow-opacity: 1;
  
  .inputContainer {
    box-shadow: 
      0 0 20px var(--holo-glow-color),
      0 0 40px var(--holo-glow-color),
      inset 0 0 20px rgba(255, 255, 255, 0.1);
  }
  
  .backgroundLayers .layer3 {
    opacity: 0.6;
    animation-duration: 10s;
  }
}

/* ===========================================
 * 性能模式 - Performance Modes
 * =========================================== */
.performance-eco {
  .backgroundLayers,
  .particleContainer,
  .dataFlowContainer {
    display: none;
  }
  
  .glowBorder {
    animation: none;
  }
}

.performance-balanced {
  // 默认性能模式，已在基础样式中定义
}

.performance-high {
  .backgroundLayers .layer3 {
    animation-duration: 8s;
  }
  
  .particleContainer {
    .particle1,
    .particle2,
    .particle3,
    .particle4 {
      animation-duration: 2s;
    }
  }
}

/* ===========================================
 * 可访问性支持 - Accessibility
 * =========================================== */
@media (prefers-reduced-motion: reduce) {
  .holoInput {
    * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }
}

@media (prefers-contrast: high) {
  .holoInput {
    --holo-border-color: currentColor;
    --holo-glow-color: currentColor;
    
    .inputContainer {
      border-width: 2px;
    }
  }
}

/* ===========================================
 * 关键帧动画 - Keyframe Animations
 * =========================================== */
@keyframes data-flow-right {
  0% {
    transform: translateX(-100%);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translateX(200%);
    opacity: 0;
  }
}

@keyframes data-flow-left {
  0% {
    transform: translateX(100%);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translateX(-200%);
    opacity: 0;
  }
}

@keyframes particle-float-1 {
  0%, 100% {
    transform: translate(0, 0) scale(0.8);
    opacity: 0;
  }
  25% {
    transform: translate(5px, -3px) scale(1);
    opacity: 0.6;
  }
  50% {
    transform: translate(-3px, -8px) scale(1.2);
    opacity: 1;
  }
  75% {
    transform: translate(8px, -5px) scale(0.9);
    opacity: 0.8;
  }
}

@keyframes particle-float-2 {
  0%, 100% {
    transform: translate(0, 0) scale(0.9);
    opacity: 0;
  }
  33% {
    transform: translate(-8px, 5px) scale(1.1);
    opacity: 0.7;
  }
  66% {
    transform: translate(3px, -6px) scale(1.3);
    opacity: 1;
  }
}

@keyframes particle-float-3 {
  0%, 100% {
    transform: translate(0, 0) scale(0.7);
    opacity: 0;
  }
  20% {
    transform: translate(4px, 8px) scale(1);
    opacity: 0.5;
  }
  50% {
    transform: translate(-6px, -4px) scale(1.4);
    opacity: 1;
  }
  80% {
    transform: translate(7px, 2px) scale(0.8);
    opacity: 0.6;
  }
}

@keyframes particle-float-4 {
  0%, 100% {
    transform: translate(0, 0) scale(1);
    opacity: 0;
  }
  40% {
    transform: translate(-5px, -7px) scale(1.2);
    opacity: 0.8;
  }
  60% {
    transform: translate(6px, 4px) scale(1.5);
    opacity: 1;
  }
}

@keyframes holographic-dimension {
  0% {
    background-position: 0% 0%;
  }
  25% {
    background-position: 100% 0%;
  }
  50% {
    background-position: 100% 100%;
  }
  75% {
    background-position: 0% 100%;
  }
  100% {
    background-position: 0% 0%;
  }
}

/* ===========================================
 * 调试和开发辅助 - Debug & Development
 * =========================================== */
@media (max-width: 768px) {
  .holoInput {
    // 移动端优化
    .particleContainer,
    .dataFlowContainer {
      opacity: 0.7;
    }
    
    .backgroundLayers .layer3 {
      animation-duration: 30s; // 减慢动画以节省电池
    }
  }
}

// 开发模式下的调试边框
.holoInput[data-debug="true"] {
  .backgroundLayers,
  .glowBorder,
  .dataFlowContainer,
  .particleContainer {
    border: 1px dashed rgba(255, 0, 0, 0.3);
  }
} 